name: Integration Test

on:
  push:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, sit, uat]
    services:
      postgres:
        image: postgres:12-alpine3.14
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: "1234"
          POSTGRES_DB: docloc
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: ✅ Checkout source code
        uses: actions/checkout@v3

      - name: ⚙️ Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 📦 Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: 🧪 Run integration test with JaCoCo
        run: mvn -f pom.xml -P${{ matrix.env }} clean verify

      - name: 📤 Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-${{ matrix.env }}
          path: target/site/jacoco

  sonarqube:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: ✅ Checkout source code
        uses: actions/checkout@v3

      - name: 🔍 Run SonarQube Analysis
        run: mvn sonar:sonar -Dsonar.projectKey=momonus -Dsonar.host.url=https://sonarcloud.io/issues?issueStatuses=OPEN,CONFIRMED -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  coverage-check:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, sit, uat]
    steps:
      - name: 📥 Download JaCoCo report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-${{ matrix.env }}

      - name: ⚠️ Check code coverage and warn if below 80%
        run: |
          if [ ! -f target/site/jacoco/jacoco.xml ]; then
            echo "::warning::JaCoCo report not found for ${{ matrix.env }}, skipping coverage check"
            exit 0
          fi
          
          COVERAGE=$(grep -oPm1 "(?<=<counter type=\"INSTRUCTION\" missed=\")\d+" target/site/jacoco/jacoco.xml || echo 0)
          TOTAL=$(grep -oPm1 "(?<=<counter type=\"INSTRUCTION\" missed=\"\d+\" covered=\")\d+" target/site/jacoco/jacoco.xml || echo 1)
          if [[ "$TOTAL" -eq 0 ]]; then
            echo "::warning::Total instructions is 0, cannot calculate coverage"
            exit 0
          fi
          
          PERCENT=$(echo "scale=2; $TOTAL*100/($TOTAL+$COVERAGE)" | bc)
          echo "Coverage: $PERCENT%"
          
          if (( $(echo "$PERCENT < 80" | bc -l) )); then
            echo "::warning::Code coverage is below 80% for ${{ matrix.env }} ($PERCENT%)"
          else
            echo "✅ Code coverage is sufficient ($PERCENT%)"
          fi
